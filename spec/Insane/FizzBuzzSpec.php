<?php

namespace spec\Insane;

use Insane\FizzBuzz;
use PhpSpec\ObjectBehavior;

/**
 * Class FizzBuzzSpec
 *
 * Generated by phpspec.
 *
 * @package spec\Insane
 */
class FizzBuzzSpec extends ObjectBehavior
{
    protected $to_20_payload = [1,2,'fizz',4,'buzz','fizz',7,8,'fizz','buzz',11,'fizz',13,14,'fizzbuzz',16,17,'fizz',19,'buzz'];

  function it_is_initializable() {
    $this->shouldHaveType(FizzBuzz::class);
  }

  function it_returns_1_for_1() {
    $this
      ->fire(1)
      ->shouldReturn(1);
  }

  function it_returns_2_for_2() {
    $this
      ->fire(2)
      ->shouldReturn(2);
  }

  function it_returns_fizz_for_3_6_9_27() {
    $this
      ->fire(3)
      ->shouldReturn('fizz');

    $this
      ->fire(6)
      ->shouldReturn('fizz');

    $this
      ->fire(9)
      ->shouldReturn('fizz');

    $this
      ->fire(27)
      ->shouldReturn('fizz');
  }

  function it_returns_buzz_for_5_10() {
    $this
      ->fire(5)
      ->shouldReturn('buzz');

    $this
      ->fire(10)
      ->shouldReturn('buzz');
  }

  function it_returns_fizzbuzz_for_15_30_45_75() {
    $this
      ->fire(15)
      ->shouldReturn('fizzbuzz');

    $this
      ->fire(30)
      ->shouldReturn('fizzbuzz');

    $this
      ->fire(45)
      ->shouldReturn('fizzbuzz');

    $this
      ->fire(75)
      ->shouldReturn('fizzbuzz');
  }

  function it_generates_output_from_range() {
    $this
      ->sequence(range(1, 20))
      ->shouldReturn($this->to_20_payload);
  }

  function it_generates_output_to_limit() {
    $this->to(20)->shouldReturn($this->to_20_payload);
  }

  function it_generates_output_to_limit_uning_binary() {
    $this->toBinary(20)
      ->shouldReturn($this->to_20_payload);
  }
}
